{
  "chunks": [
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "##. Template\n\nTemplate is a YAML input file which defines all the requests and\nother metadata for a template.\u003ccode\u003eid\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eID is the unique id for the template."
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "##. Template\n###. Good IDs\n\nA good ID uniquely identifies what the requests in the template\nare doing. Let's say you have a template that identifies a git-config\nfile on the webservers, a good name would be `git-config-exposure`. Another\nexample name is `azure-apps-nxdomain-takeover`.Examples:\n\n```yaml\n# ID Example\nid: CVE-2021-19520\n```\n\u003ccode\u003einfo\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#modelinfo\"\u003emodel.Info\u003c/a\u003e\u003c/i\u003eInfo contains metadata information about the template.Examples:\n\n```yaml\ninfo:\n    name: Argument Injection in Ruby Dragonfly\n    author: 0xspara\n    tags: cve,cve2021,rce,ruby\n    reference: https://zxsecurity.co.nz/research/argunment-injection-ruby-dragonfly/\n    severity: high\n```\n\u003ccode\u003erequests\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#httprequest\"\u003ehttp.Request\u003c/a\u003e\u003c/i\u003eRequests contains the http request to make in the template.\nWARNING: 'requests' will be deprecated and will be removed in a future release. Please use 'http' instead.Examples:\n\n```yaml\nrequests:\n    matchers:\n        - type: word\n          words:\n            - '[core]'\n        - type: dsl\n          condition: and\n          dsl:\n            - '!contains(tolower(body), ''\u003chtml'')'\n            - '!contains(tolower(body), ''\u003cbody'')'\n        - type: status\n          status:\n            - 200\n    matchers-condition: and\n    path:\n        - '{{BaseURL}}/.git/config'\n    method: GET\n```\n\u003ccode\u003ehttp\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#httprequest\"\u003ehttp.Request\u003c/a\u003e\u003c/i\u003edescription: |\nHTTP contains the http request to make in the template.\nexamples:value: exampleNormalHTTPRequestRequestsWithHTTP is placeholder(internal) only, and should not be used instead use RequestsHTTP\n\u003ccode\u003edns\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#dnsrequest\"\u003edns.Request\u003c/a\u003e\u003c/i\u003eDNS contains the dns request to make in the templateExamples:\n\n```yaml\ndns:\n    extractors:\n        - type: regex\n          regex:\n            - ec2-[-\\d]+\\.compute[-\\d]*\\.amazonaws\\.com\n            - ec2-[-\\d]+\\.[\\w\\d\\-]+\\.compute[-\\d]*\\.amazonaws\\.com\n    name: '{{FQDN}}'\n    type: CNAME\n    class: inet\n    retries: 2\n    recursion: false\n```\n\u003ccode\u003efile\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#filerequest\"\u003efile.Request\u003c/a\u003e\u003c/i\u003eFile contains the file request to make in the templateExamples:\n\n```yaml\nfile:\n    extractors:\n        - type: regex\n          regex:\n            - amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\n    extensions:\n        - all\n```\n\u003ccode\u003enetwork\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#networkrequest\"\u003enetwork.Request\u003c/a\u003e\u003c/i\u003eNetwork contains the network request to make in the template\nWARNING: 'network' will be deprecated and will be removed in a future release. Please use 'tcp' instead.Examples:\n\n```yaml\nnetwork:\n    host:\n        - '{{Hostname}}'\n        - '{{Hostname}}:2181'\n    inputs:\n        - data: \"envi\\r\\nquit\\r\\n\"\n    read-size: 2048\n    matchers:\n        - type: word\n          words:\n            - zookeeper.version\n```\n\u003ccode\u003etcp\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#networkrequest\"\u003enetwork.Request\u003c/a\u003e\u003c/i\u003edescription: |\nTCP contains the network request to make in the template\nexamples:value: exampleNormalNetworkRequestRequestsWithTCP is placeholder(internal) only, and should not be used instead use RequestsNetwork\n\u003ccode\u003eheadless\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#headlessrequest\"\u003eheadless.Request\u003c/a\u003e\u003c/i\u003eHeadless contains the headless request to make in the template.\u003ccode\u003essl\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#sslrequest\"\u003essl.Request\u003c/a\u003e\u003c/i\u003eSSL contains the SSL request to make in the template.\u003ccode\u003ewebsocket\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#websocketrequest\"\u003ewebsocket.Request\u003c/a\u003e\u003c/i\u003eWebsocket contains the Websocket request to make in the template.\u003ccode\u003ewhois\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#whoisrequest\"\u003ewhois.Request\u003c/a\u003e\u003c/i\u003eWHOIS contains the WHOIS request to make in the template.\u003ccode\u003eself-contained\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eSelf Contained marks Requests for the template as self-contained\u003ccode\u003estop-at-first-match\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eStop execution once first match is found\u003ccode\u003esignature\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#httpsignaturetypeholder\"\u003ehttp.SignatureTypeHolder\u003c/a\u003e\u003c/i\u003eSignature is the request signature methodValid values:AWS\n\u003ccode\u003evariables\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#variablesvariable\"\u003evariables.Variable\u003c/a\u003e\u003c/i\u003eVariables contains any variables for the current request.\u003ccode\u003econstants\u003c/code\u003e  \u003ci\u003emap[string]interface{}\u003c/i\u003eConstants contains any scalar costant for the current template"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "##. model.Info\n\nInfo contains metadata information about a templateAppears in:Template.info\n\n\n```yaml\nname: Argument Injection in Ruby Dragonfly\nauthor: 0xspara\ntags: cve,cve2021,rce,ruby\nreference: https://zxsecurity.co.nz/research/argunment-injection-ruby-dragonfly/\nseverity: high\n```\n\u003ccode\u003ename\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eName should be good short summary that identifies what the template does.Examples:\n\n```yaml\nname: bower.json file disclosure\n```\n\n\n```yaml\nname: Nagios Default Credentials Check\n```\n\u003ccode\u003eauthor\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#stringslicestringslice\"\u003estringslice.StringSlice\u003c/a\u003e\u003c/i\u003eAuthor of the template.Multiple values can also be specified separated by commas.Examples:\n\n```yaml\nauthor: \u003cusername\u003e\n```\n\u003ccode\u003etags\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#stringslicestringslice\"\u003estringslice.StringSlice\u003c/a\u003e\u003c/i\u003eAny tags for the template.Multiple values can also be specified separated by commas.Examples:\n\n```yaml\n# Example tags\ntags: cve,cve2019,grafana,auth-bypass,dos\n```\n\u003ccode\u003edescription\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eDescription of the template.You can go in-depth here on what the template actually does.Examples:\n\n```yaml\ndescription: Bower is a package manager which stores package information in the bower.json file\n```\n\n\n```yaml\ndescription: Subversion ALM for the enterprise before 8.8.2 allows reflected XSS at multiple locations\n```\n\u003ccode\u003ereference\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#stringslicerawstringslice\"\u003estringslice.RawStringSlice\u003c/a\u003e\u003c/i\u003eReferences for the template.This should contain links relevant to the template.Examples:\n\n```yaml\nreference:\n    - https://github.com/strapi/strapi\n    - https://github.com/getgrav/grav\n```\n\u003ccode\u003eseverity\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#severityholder\"\u003eseverity.Holder\u003c/a\u003e\u003c/i\u003eSeverity of the template.\u003ccode\u003emetadata\u003c/code\u003e  \u003ci\u003emap[string]interface{}\u003c/i\u003eMetadata of the template.Examples:\n\n```yaml\nmetadata:\n    customField1: customValue1\n```\n\u003ccode\u003eclassification\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#modelclassification\"\u003emodel.Classification\u003c/a\u003e\u003c/i\u003eClassification contains classification information about the template.\u003ccode\u003eremediation\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eRemediation steps for the template.You can go in-depth here on how to mitigate the problem found by this template.Examples:\n\n```yaml\nremediation: Change the default administrative username and password of Apache ActiveMQ by editing the file jetty-realm.properties\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. stringslice.StringSlice\n\nStringSlice represents a single (in-lined) or multiple string value(s).\nThe unmarshaller does not automatically convert in-lined strings to []string, hence the interface{} type is required.Appears in:model.Info.author\n\u003ccode\u003e\u003ca href=\"#modelinfo\"\u003emodel.Info\u003c/a\u003e.author\u003c/code\u003emodel.Info.tags\n\u003ccode\u003e\u003ca href=\"#modelinfo\"\u003emodel.Info\u003c/a\u003e.tags\u003c/code\u003emodel.Classification.cve-id\n\u003ccode\u003e\u003ca href=\"#modelclassification\"\u003emodel.Classification\u003c/a\u003e.cve-id\u003c/code\u003emodel.Classification.cwe-id\n\u003ccode\u003e\u003ca href=\"#modelclassification\"\u003emodel.Classification\u003c/a\u003e.cwe-id\u003c/code\u003e\n\n```yaml\n\u003cusername\u003e\n```\n\n\n```yaml\n# Example tags\ncve,cve2019,grafana,auth-bypass,dos\n```\n\n\n```yaml\nCVE-2020-14420\n```\n\n\n```yaml\nCWE-22\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. stringslice.RawStringSlice\n\nAppears in:model.Info.reference\n\n\n```yaml\n- https://github.com/strapi/strapi\n- https://github.com/getgrav/grav\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. severity.Holder\n\nHolder holds a Severity type. Required for un/marshalling purposesAppears in:model.Info.severity\n\u003ccode\u003e\u003c/code\u003e  \u003ci\u003eSeverity\u003c/i\u003eEnum Values:undefined\n\u003ccode\u003eundefined\u003c/code\u003einfo\n\u003ccode\u003einfo\u003c/code\u003elow\n\u003ccode\u003elow\u003c/code\u003emedium\n\u003ccode\u003emedium\u003c/code\u003ehigh\n\u003ccode\u003ehigh\u003c/code\u003ecritical\n\u003ccode\u003ecritical\u003c/code\u003eunknown\n\u003ccode\u003eunknown\u003c/code\u003e"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. model.Classification\n\nAppears in:model.Info.classification\n\u003ccode\u003ecve-id\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#stringslicestringslice\"\u003estringslice.StringSlice\u003c/a\u003e\u003c/i\u003eCVE ID for the templateExamples:\n\n```yaml\ncve-id: CVE-2020-14420\n```\n\u003ccode\u003ecwe-id\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#stringslicestringslice\"\u003estringslice.StringSlice\u003c/a\u003e\u003c/i\u003eCWE ID for the template.Examples:\n\n```yaml\ncwe-id: CWE-22\n```\n\u003ccode\u003ecvss-metrics\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eCVSS Metrics for the template.Examples:\n\n```yaml\ncvss-metrics: 3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H\n```\n\u003ccode\u003ecvss-score\u003c/code\u003e  \u003ci\u003efloat64\u003c/i\u003eCVSS Score for the template.Examples:\n\n```yaml\ncvss-score: \"9.8\"\n```\n\u003ccode\u003eepss-score\u003c/code\u003e  \u003ci\u003efloat64\u003c/i\u003eEPSS Score for the template.Examples:\n\n```yaml\nepss-score: \"0.42509\"\n```\n\u003ccode\u003ecpe\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eCPE for the template.Examples:\n\n```yaml\ncpe: cpe:/a:vendor:product:version\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. http.Request\n\nRequest contains a http request to be made from a templateAppears in:Template.requests\n\u003ccode\u003e\u003ca href=\"#template\"\u003eTemplate\u003c/a\u003e.requests\u003c/code\u003eTemplate.http\n\u003ccode\u003e\u003ca href=\"#template\"\u003eTemplate\u003c/a\u003e.http\u003c/code\u003e\n\n```yaml\nmatchers:\n    - type: word\n      words:\n        - '[core]'\n    - type: dsl\n      condition: and\n      dsl:\n        - '!contains(tolower(body), ''\u003chtml'')'\n        - '!contains(tolower(body), ''\u003cbody'')'\n    - type: status\n      status:\n        - 200\nmatchers-condition: and\npath:\n    - '{{BaseURL}}/.git/config'\nmethod: GET\n```\nPart Definitions:template-id - ID of the template executed\ntemplate-info - Info Block of the template executed\ntemplate-path - Path of the template executed\nhost - Host is the input to the template\nmatched - Matched is the input which was matched upon\ntype - Type is the type of request made\nrequest - HTTP request made from the client\nresponse - HTTP response received from server\nstatus_code - Status Code received from the Server\nbody - HTTP response body received from server (default)\ncontent_length - HTTP Response content length\nheader,all_headers - HTTP response headers\nduration - HTTP request time duration\nall - HTTP response body + headers\ncookies_from_response - HTTP response cookies in name:value format\nheaders_from_response - HTTP response headers in name:value format\n\u003ccode\u003epath\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003ePath contains the path/s for the HTTP requests. It supports variables\nas placeholders.Examples:\n\n```yaml\n# Some example path values\npath:\n    - '{{BaseURL}}'\n    - '{{BaseURL}}/+CSCOU+/../+CSCOE+/files/file_list.json?path=/sessions'\n```\n\u003ccode\u003eraw\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eRaw contains HTTP Requests in Raw format.Examples:\n\n```yaml\n# Some example raw requests\nraw:\n    - |-\n      GET /etc/passwd HTTP/1.1\n      Host:\n      Content-Length: 4\n    - |-\n      POST /.%0d./.%0d./.%0d./.%0d./bin/sh HTTP/1.1\n      Host: {{Hostname}}\n      User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\n      Content-Length: 1\n      Connection: close\n\n      echo\n      echo\n      cat /etc/passwd 2\u003e\u00261\n```\n\u003ccode\u003eid\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eID is the optional id of the request\u003ccode\u003ename\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eName is the optional name of the request.If a name is specified, all the named request in a template can be matched upon\nin a combined manner allowing multi-request based matchers.\u003ccode\u003eattack\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#generatorsattacktypeholder\"\u003egenerators.AttackTypeHolder\u003c/a\u003e\u003c/i\u003eAttack is the type of payload combinations to perform.batteringram is inserts the same payload into all defined payload positions at once, pitchfork combines multiple payload sets and clusterbomb generates\npermutations and combinations for all payloads.Valid values:batteringram\n\u003ccode\u003ebatteringram\u003c/code\u003epitchfork\n\u003ccode\u003epitchfork\u003c/code\u003eclusterbomb\n\u003ccode\u003eclusterbomb\u003c/code\u003e\u003ccode\u003emethod\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#httpmethodtypeholder\"\u003eHTTPMethodTypeHolder\u003c/a\u003e\u003c/i\u003eMethod is the HTTP Request Method.\u003ccode\u003ebody\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eBody is an optional parameter which contains HTTP Request body.Examples:\n\n```yaml\n# Same Body for a Login POST request\nbody: username=test\u0026password=test\n```\n\u003ccode\u003epayloads\u003c/code\u003e  \u003ci\u003emap[string]interface{}\u003c/i\u003ePayloads contains any payloads for the current request.Payloads support both key-values combinations where a list\nof payloads is provided, or optionally a single file can also\nbe provided as payload which will be read on run-time.\u003ccode\u003eheaders\u003c/code\u003e  \u003ci\u003emap[string]string\u003c/i\u003eHeaders contains HTTP Headers to send with the request.Examples:\n\n```yaml\nheaders:\n    Any-Header: Any-Value\n    Content-Length: \"1\"\n    Content-Type: application/x-www-form-urlencoded\n```\n\u003ccode\u003erace_count\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eRaceCount is the number of times to send a request in Race Condition Attack.Examples:\n\n```yaml\n# Send a request 5 times\nrace_count: 5\n```\n\u003ccode\u003emax-redirects\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eMaxRedirects is the maximum number of redirects that should be followed.Examples:\n\n```yaml\n# Follow up to 5 redirects\nmax-redirects: 5\n```\n\u003ccode\u003epipeline-concurrent-connections\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003ePipelineConcurrentConnections is number of connections to create during pipelining.Examples:\n\n```yaml\n# Create 40 concurrent connections\npipeline-concurrent-connections: 40\n```\n\u003ccode\u003epipeline-requests-per-connection\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003ePipelineRequestsPerConnection is number of requests to send per connection when pipelining.Examples:\n\n```yaml\n# Send 100 requests per pipeline connection\npipeline-requests-per-connection: 100\n```\n\u003ccode\u003ethreads\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eThreads specifies number of threads to use sending requests. This enables Connection Pooling.Connection: Close attribute must not be used in request while using threads flag, otherwise\npooling will fail and engine will continue to close connections after requests.Examples:\n\n```yaml\n# Send requests using 10 concurrent threads\nthreads: 10\n```\n\u003ccode\u003emax-size\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eMaxSize is the maximum size of http response body to read in bytes.Examples:\n\n```yaml\n# Read max 2048 bytes of the response\nmax-size: 2048\n```\n\u003ccode\u003efuzzing\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#fuzzrule\"\u003efuzz.Rule\u003c/a\u003e\u003c/i\u003eFuzzing describes schema to fuzz http requests\u003ccode\u003esignature\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#signaturetypeholder\"\u003eSignatureTypeHolder\u003c/a\u003e\u003c/i\u003eSignature is the request signature methodValid values:AWS\n\u003ccode\u003ecookie-reuse\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eCookieReuse is an optional setting that enables cookie reuse for\nall requests defined in raw section.\u003ccode\u003eread-all\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eEnables force reading of the entire raw unsafe request body ignoring\nany specified content length headers.\u003ccode\u003eredirects\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eRedirects specifies whether redirects should be followed by the HTTP Client.This can be used in conjunction with `max-redirects` to control the HTTP request redirects.\u003ccode\u003ehost-redirects\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eRedirects specifies whether only redirects to the same host should be followed by the HTTP Client.This can be used in conjunction with `max-redirects` to control the HTTP request redirects.\u003ccode\u003epipeline\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003ePipeline defines if the attack should be performed with HTTP 1.1 PipeliningAll requests must be idempotent (GET/POST). This can be used for race conditions/billions requests.\u003ccode\u003eunsafe\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eUnsafe specifies whether to use rawhttp engine for sending Non RFC-Compliant requests.This uses the [rawhttp](https://github.com/projectdiscovery/rawhttp) engine to achieve complete\ncontrol over the request, with no normalization performed by the client.\u003ccode\u003erace\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eRace determines if all the request have to be attempted at the same time (Race Condition)The actual number of requests that will be sent is determined by the `race_count`  field.\u003ccode\u003ereq-condition\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eReqCondition automatically assigns numbers to requests and preserves their history.This allows matching on them later for multi-request conditions.\u003ccode\u003estop-at-first-match\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eStopAtFirstMatch stops the execution of the requests and template as soon as a match is found.\u003ccode\u003eskip-variables-check\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eSkipVariablesCheck skips the check for unresolved variables in request\u003ccode\u003eiterate-all\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eIterateAll iterates all the values extracted from internal extractors\u003ccode\u003edigest-username\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eDigestAuthUsername specifies the username for digest authentication\u003ccode\u003edigest-password\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eDigestAuthPassword specifies the password for digest authentication"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. generators.AttackTypeHolder\n\nAttackTypeHolder is used to hold internal type of the protocolAppears in:http.Request.attack\n\u003ccode\u003e\u003ca href=\"#httprequest\"\u003ehttp.Request\u003c/a\u003e.attack\u003c/code\u003edns.Request.attack\n\u003ccode\u003e\u003ca href=\"#dnsrequest\"\u003edns.Request\u003c/a\u003e.attack\u003c/code\u003enetwork.Request.attack\n\u003ccode\u003e\u003ca href=\"#networkrequest\"\u003enetwork.Request\u003c/a\u003e.attack\u003c/code\u003eheadless.Request.attack\n\u003ccode\u003e\u003ca href=\"#headlessrequest\"\u003eheadless.Request\u003c/a\u003e.attack\u003c/code\u003ewebsocket.Request.attack\n\u003ccode\u003e\u003ca href=\"#websocketrequest\"\u003ewebsocket.Request\u003c/a\u003e.attack\u003c/code\u003e\u003ccode\u003e\u003c/code\u003e  \u003ci\u003eAttackType\u003c/i\u003eEnum Values:batteringram\n\u003ccode\u003ebatteringram\u003c/code\u003epitchfork\n\u003ccode\u003epitchfork\u003c/code\u003eclusterbomb\n\u003ccode\u003eclusterbomb\u003c/code\u003e"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. HTTPMethodTypeHolder\n\nHTTPMethodTypeHolder is used to hold internal type of the HTTP MethodAppears in:http.Request.method\n\u003ccode\u003e\u003c/code\u003e  \u003ci\u003eHTTPMethodType\u003c/i\u003eEnum Values:GET\n\u003ccode\u003eGET\u003c/code\u003eHEAD\n\u003ccode\u003eHEAD\u003c/code\u003ePOST\n\u003ccode\u003ePOST\u003c/code\u003ePUT\n\u003ccode\u003ePUT\u003c/code\u003eDELETE\n\u003ccode\u003eDELETE\u003c/code\u003eCONNECT\n\u003ccode\u003eCONNECT\u003c/code\u003eOPTIONS\n\u003ccode\u003eOPTIONS\u003c/code\u003eTRACE\n\u003ccode\u003eTRACE\u003c/code\u003ePATCH\n\u003ccode\u003ePATCH\u003c/code\u003ePURGE\n\u003ccode\u003ePURGE\u003c/code\u003eDebug\n\u003ccode\u003eDebug\u003c/code\u003e"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. fuzz.Rule\n\nRule is a single rule which describes how to fuzz the requestAppears in:http.Request.fuzzing\n\u003ccode\u003etype\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eType is the type of fuzzing rule to perform.replace replaces the values entirely. prefix prefixes the value. postfix postfixes the value\nand infix places between the values.Valid values:replace\n\u003ccode\u003ereplace\u003c/code\u003eprefix\n\u003ccode\u003eprefix\u003c/code\u003epostfix\n\u003ccode\u003epostfix\u003c/code\u003einfix\n\u003ccode\u003einfix\u003c/code\u003e\u003ccode\u003epart\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003ePart is the part of request to fuzz.query fuzzes the query part of url. More parts will be added later.Valid values:query\n\u003ccode\u003emode\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eMode is the mode of fuzzing to perform.single fuzzes one value at a time. multiple fuzzes all values at same time.Valid values:single\n\u003ccode\u003esingle\u003c/code\u003emultiple\n\u003ccode\u003emultiple\u003c/code\u003e\u003ccode\u003ekeys\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eKeys is the optional list of key named parameters to fuzz.Examples:\n\n```yaml\n# Examples of keys\nkeys:\n    - url\n    - file\n    - host\n```\n\u003ccode\u003ekeys-regex\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eKeysRegex is the optional list of regex key parameters to fuzz.Examples:\n\n```yaml\n# Examples of key regex\nkeys-regex:\n    - url.*\n```\n\u003ccode\u003evalues\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eValues is the optional list of regex value parameters to fuzz.Examples:\n\n```yaml\n# Examples of value regex\nvalues:\n    - https?://.*\n```\n\u003ccode\u003efuzz\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eFuzz is the list of payloads to perform substitutions with.Examples:\n\n```yaml\n# Examples of fuzz\nfuzz:\n    - '{{ssrf}}'\n    - '{{interactsh-url}}'\n    - example-value\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. SignatureTypeHolder\n\nSignatureTypeHolder is used to hold internal type of the signatureAppears in:http.Request.signature"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. dns.Request\n\nRequest contains a DNS protocol request to be made from a templateAppears in:Template.dns\n\n\n```yaml\nextractors:\n    - type: regex\n      regex:\n        - ec2-[-\\d]+\\.compute[-\\d]*\\.amazonaws\\.com\n        - ec2-[-\\d]+\\.[\\w\\d\\-]+\\.compute[-\\d]*\\.amazonaws\\.com\nname: '{{FQDN}}'\ntype: CNAME\nclass: inet\nretries: 2\nrecursion: false\n```\nPart Definitions:template-id - ID of the template executed\ntemplate-info - Info Block of the template executed\ntemplate-path - Path of the template executed\nhost - Host is the input to the template\nmatched - Matched is the input which was matched upon\nrequest - Request contains the DNS request in text format\ntype - Type is the type of request made\nrcode - Rcode field returned for the DNS request\nquestion - Question contains the DNS question field\nextra - Extra contains the DNS response extra field\nanswer - Answer contains the DNS response answer field\nns - NS contains the DNS response NS field\nraw,body,all - Raw contains the raw DNS response (default)\ntrace - Trace contains trace data for DNS request if enabled\n\u003ccode\u003eid\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eID is the optional id of the request\u003ccode\u003ename\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eName is the Hostname to make DNS request for.Generally, it is set to {{FQDN}} which is the domain we get from input.Examples:\n\n```yaml\nname: '{{FQDN}}'\n```\n\u003ccode\u003etype\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#dnsrequesttypeholder\"\u003eDNSRequestTypeHolder\u003c/a\u003e\u003c/i\u003eRequestType is the type of DNS request to make.\u003ccode\u003eclass\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eClass is the class of the DNS request.Usually it's enough to just leave it as INET.Valid values:inet\n\u003ccode\u003einet\u003c/code\u003ecsnet\n\u003ccode\u003ecsnet\u003c/code\u003echaos\n\u003ccode\u003echaos\u003c/code\u003ehesiod\n\u003ccode\u003ehesiod\u003c/code\u003enone\n\u003ccode\u003enone\u003c/code\u003eany\n\u003ccode\u003eany\u003c/code\u003e\u003ccode\u003eretries\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eRetries is the number of retries for the DNS requestExamples:\n\n```yaml\n# Use a retry of 3 to 5 generally\nretries: 5\n```\n\u003ccode\u003etrace\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eTrace performs a trace operation for the target.\u003ccode\u003etrace-max-recursion\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eTraceMaxRecursion is the number of max recursion allowed for trace operationsExamples:\n\n```yaml\n# Use a retry of 100 to 150 generally\ntrace-max-recursion: 100\n```\n\u003ccode\u003eattack\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#generatorsattacktypeholder\"\u003egenerators.AttackTypeHolder\u003c/a\u003e\u003c/i\u003eAttack is the type of payload combinations to perform.Batteringram is inserts the same payload into all defined payload positions at once, pitchfork combines multiple payload sets and clusterbomb generates\npermutations and combinations for all payloads.\u003ccode\u003epayloads\u003c/code\u003e  \u003ci\u003emap[string]interface{}\u003c/i\u003ePayloads contains any payloads for the current request.Payloads support both key-values combinations where a list\nof payloads is provided, or optionally a single file can also\nbe provided as payload which will be read on run-time.\u003ccode\u003erecursion\u003c/code\u003e  \u003ci\u003edns.bool\u003c/i\u003eRecursion determines if resolver should recurse all records to get fresh results.\u003ccode\u003eresolvers\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eResolvers to use for the dns requests"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. DNSRequestTypeHolder\n\nDNSRequestTypeHolder is used to hold internal type of the DNS typeAppears in:dns.Request.type\n\u003ccode\u003e\u003c/code\u003e  \u003ci\u003eDNSRequestType\u003c/i\u003eEnum Values:A\n\u003ccode\u003eA\u003c/code\u003eNS\n\u003ccode\u003eNS\u003c/code\u003eDS\n\u003ccode\u003eDS\u003c/code\u003eCNAME\n\u003ccode\u003eCNAME\u003c/code\u003eSOA\n\u003ccode\u003eSOA\u003c/code\u003ePTR\n\u003ccode\u003ePTR\u003c/code\u003eMX\n\u003ccode\u003eMX\u003c/code\u003eTXT\n\u003ccode\u003eTXT\u003c/code\u003eAAAA\n\u003ccode\u003eAAAA\u003c/code\u003eCAA\n\u003ccode\u003eCAA\u003c/code\u003eTLSA\n\u003ccode\u003eTLSA\u003c/code\u003eANY\n\u003ccode\u003eANY\u003c/code\u003e"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. file.Request\n\nRequest contains a File matching mechanism for local disk operations.Appears in:Template.file\n\n\n```yaml\nextractors:\n    - type: regex\n      regex:\n        - amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\nextensions:\n    - all\n```\nPart Definitions:template-id - ID of the template executed\ntemplate-info - Info Block of the template executed\ntemplate-path - Path of the template executed\nmatched - Matched is the input which was matched upon\npath - Path is the path of file on local filesystem\ntype - Type is the type of request made\nraw,body,all,data - Raw contains the raw file contents\n\u003ccode\u003eextensions\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eExtensions is the list of extensions or mime types to perform matching on.Examples:\n\n```yaml\nextensions:\n    - .txt\n    - .go\n    - .json\n```\n\u003ccode\u003edenylist\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eDenyList is the list of file, directories, mime types or extensions to deny during matching.By default, it contains some non-interesting extensions that are hardcoded\nin nuclei.Examples:\n\n```yaml\ndenylist:\n    - .avi\n    - .mov\n    - .mp3\n```\n\u003ccode\u003eid\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eID is the optional id of the request\u003ccode\u003emax-size\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eMaxSize is the maximum size of the file to run request on.By default, nuclei will process 1 GB of content and not go more than that.\nIt can be set to much lower or higher depending on use.\nIf set to \"no\" then all content will be processedExamples:\n\n```yaml\nmax-size: 5Mb\n```\n\u003ccode\u003earchive\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eelaborates archives\u003ccode\u003emime-type\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eenables mime types check\u003ccode\u003eno-recursive\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eNoRecursive specifies whether to not do recursive checks if folders are provided."
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. network.Request\n\nRequest contains a Network protocol request to be made from a templateAppears in:Template.network\n\u003ccode\u003e\u003ca href=\"#template\"\u003eTemplate\u003c/a\u003e.network\u003c/code\u003eTemplate.tcp\n\u003ccode\u003e\u003ca href=\"#template\"\u003eTemplate\u003c/a\u003e.tcp\u003c/code\u003e\n\n```yaml\nhost:\n    - '{{Hostname}}'\n    - '{{Hostname}}:2181'\ninputs:\n    - data: \"envi\\r\\nquit\\r\\n\"\nread-size: 2048\nmatchers:\n    - type: word\n      words:\n        - zookeeper.version\n```\nPart Definitions:template-id - ID of the template executed\ntemplate-info - Info Block of the template executed\ntemplate-path - Path of the template executed\nhost - Host is the input to the template\nmatched - Matched is the input which was matched upon\ntype - Type is the type of request made\nrequest - Network request made from the client\nbody,all,data - Network response received from server (default)\nraw - Full Network protocol data\n\u003ccode\u003eid\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eID is the optional id of the request\u003ccode\u003ehost\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eHost to send network requests to.Usually it's set to `{{Hostname}}`. If you want to enable TLS for\nTCP Connection, you can use `tls://{{Hostname}}`.Examples:\n\n```yaml\nhost:\n    - '{{Hostname}}'\n```\n\u003ccode\u003eattack\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#generatorsattacktypeholder\"\u003egenerators.AttackTypeHolder\u003c/a\u003e\u003c/i\u003eAttack is the type of payload combinations to perform.Batteringram is inserts the same payload into all defined payload positions at once, pitchfork combines multiple payload sets and clusterbomb generates\npermutations and combinations for all payloads.\u003ccode\u003epayloads\u003c/code\u003e  \u003ci\u003emap[string]interface{}\u003c/i\u003ePayloads contains any payloads for the current request.Payloads support both key-values combinations where a list\nof payloads is provided, or optionally a single file can also\nbe provided as payload which will be read on run-time.\u003ccode\u003einputs\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#networkinput\"\u003enetwork.Input\u003c/a\u003e\u003c/i\u003eInputs contains inputs for the network socket\u003ccode\u003eread-size\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eReadSize is the size of response to read at the endDefault value for read-size is 1024.Examples:\n\n```yaml\nread-size: 2048\n```\n\u003ccode\u003eread-all\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eReadAll determines if the data stream should be read till the end regardless of the sizeDefault value for read-all is false.Examples:\n\n```yaml\nread-all: false\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. network.Input\n\nAppears in:network.Request.inputs\n\u003ccode\u003edata\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eData is the data to send as the input.It supports DSL Helper Functions as well as normal expressions.Examples:\n\n```yaml\ndata: TEST\n```\n\n\n```yaml\ndata: hex_decode('50494e47')\n```\n\u003ccode\u003etype\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#networkinputtypeholder\"\u003eNetworkInputTypeHolder\u003c/a\u003e\u003c/i\u003eType is the type of input specified in `data` field.Default value is text, but hex can be used for hex formatted data.Valid values:hex\n\u003ccode\u003ehex\u003c/code\u003etext\n\u003ccode\u003etext\u003c/code\u003e\u003ccode\u003eread\u003c/code\u003e  \u003ci\u003eint\u003c/i\u003eRead is the number of bytes to read from socket.This can be used for protocols which expect an immediate response. You can\nread and write responses one after another and eventually perform matching\non every data captured with `name` attribute.The [network docs](https://nuclei.projectdiscovery.io/templating-guide/protocols/network/) highlight more on how to do this.Examples:\n\n```yaml\nread: 1024\n```\n\u003ccode\u003ename\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eName is the optional name of the data read to provide matching on.Examples:\n\n```yaml\nname: prefix\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. NetworkInputTypeHolder\n\nNetworkInputTypeHolder is used to hold internal type of the Network typeAppears in:network.Input.type\n\u003ccode\u003e\u003c/code\u003e  \u003ci\u003eNetworkInputType\u003c/i\u003eEnum Values:hex\n\u003ccode\u003ehex\u003c/code\u003etext\n\u003ccode\u003etext\u003c/code\u003e"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. headless.Request\n\nRequest contains a Headless protocol request to be made from a templateAppears in:Template.headless\nPart Definitions:template-id - ID of the template executed\ntemplate-info - Info Block of the template executed\ntemplate-path - Path of the template executed\nhost - Host is the input to the template\nmatched - Matched is the input which was matched upon\ntype - Type is the type of request made\nreq - Headless request made from the client\nresp,body,data - Headless response received from client (default)\n\u003ccode\u003eid\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eID is the optional id of the request\u003ccode\u003eattack\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#generatorsattacktypeholder\"\u003egenerators.AttackTypeHolder\u003c/a\u003e\u003c/i\u003eAttack is the type of payload combinations to perform.Batteringram is inserts the same payload into all defined payload positions at once, pitchfork combines multiple payload sets and clusterbomb generates\npermutations and combinations for all payloads.\u003ccode\u003epayloads\u003c/code\u003e  \u003ci\u003emap[string]interface{}\u003c/i\u003ePayloads contains any payloads for the current request.Payloads support both key-values combinations where a list\nof payloads is provided, or optionally a single file can also\nbe provided as payload which will be read on run-time.\u003ccode\u003esteps\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#engineaction\"\u003eengine.Action\u003c/a\u003e\u003c/i\u003eSteps is the list of actions to run for headless request\u003ccode\u003euser_agent\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#useragentuseragentholder\"\u003euserAgent.UserAgentHolder\u003c/a\u003e\u003c/i\u003edescriptions: |\nUser-Agent is the type of user-agent to use for the request.\u003ccode\u003ecustom_user_agent\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003edescription: |\nIf UserAgent is set to custom, customUserAgent is the custom user-agent to use for the request.\u003ccode\u003estop-at-first-match\u003c/code\u003e  \u003ci\u003ebool\u003c/i\u003eStopAtFirstMatch stops the execution of the requests and template as soon as a match is found."
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. engine.Action\n\nAction is an action taken by the browser to reach a navigationEach step that the browser executes is an action. Most navigations\nusually start from the ActionLoadURL event, and further navigations\nare discovered on the found page. We also keep track and only\nscrape new navigation from pages we haven't crawled yet.Appears in:headless.Request.steps\n\u003ccode\u003eargs\u003c/code\u003e  \u003ci\u003emap[string]string\u003c/i\u003eArgs contain arguments for the headless action.\nPer action arguments are described in detail [here](https://nuclei.projectdiscovery.io/templating-guide/protocols/headless/).\u003ccode\u003ename\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eName is the name assigned to the headless action.This can be used to execute code, for instance in browser\nDOM using script action, and get the result in a variable\nwhich can be matched upon by nuclei. An Example template [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/headless/prototype-pollution-check.yaml).\u003ccode\u003edescription\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eDescription is the optional description of the headless action\u003ccode\u003eaction\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#actiontypeholder\"\u003eActionTypeHolder\u003c/a\u003e\u003c/i\u003eAction is the type of the action to perform."
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. ActionTypeHolder\n\nActionTypeHolder is used to hold internal type of the actionAppears in:engine.Action.action\n\u003ccode\u003e\u003c/code\u003e  \u003ci\u003eActionType\u003c/i\u003eEnum Values:navigate\n\u003ccode\u003enavigate\u003c/code\u003escript\n\u003ccode\u003escript\u003c/code\u003eclick\n\u003ccode\u003eclick\u003c/code\u003erightclick\n\u003ccode\u003erightclick\u003c/code\u003etext\n\u003ccode\u003etext\u003c/code\u003escreenshot\n\u003ccode\u003escreenshot\u003c/code\u003etime\n\u003ccode\u003etime\u003c/code\u003eselect\n\u003ccode\u003eselect\u003c/code\u003efiles\n\u003ccode\u003efiles\u003c/code\u003ewaitload\n\u003ccode\u003ewaitload\u003c/code\u003egetresource\n\u003ccode\u003egetresource\u003c/code\u003eextract\n\u003ccode\u003eextract\u003c/code\u003esetmethod\n\u003ccode\u003esetmethod\u003c/code\u003eaddheader\n\u003ccode\u003eaddheader\u003c/code\u003esetheader\n\u003ccode\u003esetheader\u003c/code\u003edeleteheader\n\u003ccode\u003edeleteheader\u003c/code\u003esetbody\n\u003ccode\u003esetbody\u003c/code\u003ewaitevent\n\u003ccode\u003ewaitevent\u003c/code\u003ekeyboard\n\u003ccode\u003ekeyboard\u003c/code\u003edebug\n\u003ccode\u003edebug\u003c/code\u003esleep\n\u003ccode\u003esleep\u003c/code\u003ewaitvisible\n\u003ccode\u003ewaitvisible\u003c/code\u003e"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. userAgent.UserAgentHolder\n\nUserAgentHolder holds a UserAgent type. Required for un/marshalling purposesAppears in:headless.Request.user_agent\n\u003ccode\u003e\u003c/code\u003e  \u003ci\u003eUserAgent\u003c/i\u003eEnum Values:random\n\u003ccode\u003erandom\u003c/code\u003eoff\n\u003ccode\u003eoff\u003c/code\u003edefault\n\u003ccode\u003edefault\u003c/code\u003ecustom\n\u003ccode\u003ecustom\u003c/code\u003e"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. ssl.Request\n\nRequest is a request for the SSL protocolAppears in:Template.ssl\nPart Definitions:type - Type is the type of request made\nresponse - JSON SSL protocol handshake details\nnot_after - Timestamp after which the remote cert expires\nhost - Host is the input to the template\nmatched - Matched is the input which was matched upon\n\u003ccode\u003eaddress\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eAddress contains address for the request\u003ccode\u003emin_version\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eMinimum tls version - auto if not specified.Valid values:sslv3\n\u003ccode\u003esslv3\u003c/code\u003etls10\n\u003ccode\u003etls10\u003c/code\u003etls11\n\u003ccode\u003etls11\u003c/code\u003etls12\n\u003ccode\u003etls12\u003c/code\u003etls13\n\u003ccode\u003etls13\u003c/code\u003e\u003ccode\u003emax_version\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eMax tls version - auto if not specified.Valid values:sslv3\n\u003ccode\u003esslv3\u003c/code\u003etls10\n\u003ccode\u003etls10\u003c/code\u003etls11\n\u003ccode\u003etls11\u003c/code\u003etls12\n\u003ccode\u003etls12\u003c/code\u003etls13\n\u003ccode\u003etls13\u003c/code\u003e\u003ccode\u003ecipher_suites\u003c/code\u003e  \u003ci\u003e[]string\u003c/i\u003eClient Cipher Suites  - auto if not specified.\u003ccode\u003escan_mode\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003edescription: |\nTls Scan Mode - auto if not specified\nvalues:\"ctls\"\n\"ztls\"\n\"auto\"\"openssl\" # reverts to \"auto\" is openssl is not installed\n\"openssl\" # reverts to \"auto\" is openssl is not installed"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. websocket.Request\n\nRequest is a request for the Websocket protocolAppears in:Template.websocket\nPart Definitions:type - Type is the type of request made\nsuccess - Success specifies whether websocket connection was successful\nrequest - Websocket request made to the server\nresponse - Websocket response received from the server\nhost - Host is the input to the template\nmatched - Matched is the input which was matched upon\n\u003ccode\u003eaddress\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eAddress contains address for the request\u003ccode\u003einputs\u003c/code\u003e  \u003ci\u003e[]\u003ca href=\"#websocketinput\"\u003ewebsocket.Input\u003c/a\u003e\u003c/i\u003eInputs contains inputs for the websocket protocol\u003ccode\u003eheaders\u003c/code\u003e  \u003ci\u003emap[string]string\u003c/i\u003eHeaders contains headers for the request.\u003ccode\u003eattack\u003c/code\u003e  \u003ci\u003e\u003ca href=\"#generatorsattacktypeholder\"\u003egenerators.AttackTypeHolder\u003c/a\u003e\u003c/i\u003eAttack is the type of payload combinations to perform.Sniper is each payload once, pitchfork combines multiple payload sets and clusterbomb generates\npermutations and combinations for all payloads.\u003ccode\u003epayloads\u003c/code\u003e  \u003ci\u003emap[string]interface{}\u003c/i\u003ePayloads contains any payloads for the current request.Payloads support both key-values combinations where a list\nof payloads is provided, or optionally a single file can also\nbe provided as payload which will be read on run-time."
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. websocket.Input\n\nAppears in:websocket.Request.inputs\n\u003ccode\u003edata\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eData is the data to send as the input.It supports DSL Helper Functions as well as normal expressions.Examples:\n\n```yaml\ndata: TEST\n```\n\n\n```yaml\ndata: hex_decode('50494e47')\n```\n\u003ccode\u003ename\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eName is the optional name of the data read to provide matching on.Examples:\n\n```yaml\nname: prefix\n```"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. whois.Request\n\nRequest is a request for the WHOIS protocolAppears in:Template.whois\n\u003ccode\u003equery\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003eQuery contains query for the request\u003ccode\u003eserver\u003c/code\u003e  \u003ci\u003estring\u003c/i\u003edescription: |\nOptional WHOIS server URL.Otherwise, nil enables bootstrapping"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. http.SignatureTypeHolder\n\nSignatureTypeHolder is used to hold internal type of the signatureAppears in:Template.signature"
    },
    {
      "filename": "SYNTAX-REFERENCE.md",
      "metadata": {
        "path": "SYNTAX-REFERENCE.md"
      },
      "content": "#. variables.Variable\n\nVariable is a key-value pair of strings that can be used\nthroughout template.Appears in:Template.variables"
    }
  ]
}